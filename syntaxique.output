Grammar

    0 $accept: programme $end

    1 programme: MainPrgm IDF pvg Var declarations BeginPg acc_ouv instructions acc_fer EndPg pvg

    2 instruction: affectation
    3            | inOut
    4            | condition
    5            | boucle

    6 instructions: instruction
    7             | instructions instruction

    8 expression: IDF
    9           | constante
   10           | reel
   11           | chaine
   12           | IDF crochet_ouv expression crochet_fer
   13           | par_ouv expression AND expression par_fer
   14           | par_ouv expression OR expression par_fer
   15           | NOT par_ouv expression par_fer
   16           | expression add expression
   17           | expression sous expression
   18           | expression mult expression
   19           | expression division expression
   20           | par_ouv expression par_fer
   21           | expression inf expression
   22           | expression sup expression
   23           | expression inf_egal expression
   24           | expression sup_egal expression
   25           | expression egal expression
   26           | expression not_egal expression

   27 type: Int
   28     | reel

   29 declaration: let liste_idf separ_dec type pvg
   30            | let liste_idf separ_dec declaration_tableau

   31 declaration_tableau: crochet_ouv type pvg constante crochet_fer pvg

   32 liste_idf: IDF
   33          | liste_idf vg IDF

   34 const_declaration: at_sign define Const IDF separ_dec type affect_val constante pvg

   35 declarations: /* empty */
   36             | declaration declarations
   37             | const_declaration declarations

   38 inOut: input_var par_ouv IDF par_fer pvg
   39      | output_var par_ouv chaine par_fer pvg

   40 affectation: IDF aff expression pvg
   41            | IDF crochet_ouv expression crochet_fer aff expression pvg

   42 condition: IF par_ouv expression par_fer THEN acc_ouv instructions acc_fer
   43          | IF par_ouv expression par_fer THEN acc_ouv instructions acc_fer ELSE acc_ouv instructions acc_fer

   44 boucle: DO bloc_instructions WHILE par_ouv expression par_fer pvg
   45       | FOR IDF FROM constante TO constante STEP constante bloc_instructions

   46 bloc_instructions: acc_ouv instructions acc_fer


Terminals, with rules where they appear

$end (0) 0
error (256)
MainPrgm (258) 1
Var (259) 1
BeginPg (260) 1
EndPg (261) 1
input_var (262) 38
output_var (263) 39
Const (264) 34
IDF (265) 1 8 12 32 33 34 38 40 41 45
let (266) 29 30
define (267) 34
at_sign (268) 34
chaine (269) 11 39
Int (270) 27
constante (271) 9 31 34 45
reel (272) 10 28
IF (273) 42 43
THEN (274) 42 43
ELSE (275) 43
DO (276) 44
WHILE (277) 44
FOR (278) 45
FROM (279) 45
TO (280) 45
STEP (281) 45
OR (282) 14
AND (283) 13
NOT (284) 15
aff (285) 40 41
affect_val (286) 34
pvg (287) 1 29 31 34 38 39 40 41 44
vg (288) 33
separ_dec (289) 29 30 34
add (290) 16
sous (291) 17
mult (292) 18
division (293) 19
inf_egal (294) 23
sup_egal (295) 24
inf (296) 21
sup (297) 22
egal (298) 25
not_egal (299) 26
acc_ouv (300) 1 42 43 46
acc_fer (301) 1 42 43 46
par_ouv (302) 13 14 15 20 38 39 42 43 44
par_fer (303) 13 14 15 20 38 39 42 43 44
crochet_ouv (304) 12 31 41
crochet_fer (305) 12 31 41


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
programme (52)
    on left: 1, on right: 0
instruction (53)
    on left: 2 3 4 5, on right: 6 7
instructions (54)
    on left: 6 7, on right: 1 7 42 43 46
expression (55)
    on left: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26,
    on right: 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 40 41 42
    43 44
type (56)
    on left: 27 28, on right: 29 31 34
declaration (57)
    on left: 29 30, on right: 36
declaration_tableau (58)
    on left: 31, on right: 30
liste_idf (59)
    on left: 32 33, on right: 29 30 33
const_declaration (60)
    on left: 34, on right: 37
declarations (61)
    on left: 35 36 37, on right: 1 36 37
inOut (62)
    on left: 38 39, on right: 3
affectation (63)
    on left: 40 41, on right: 2
condition (64)
    on left: 42 43, on right: 4
boucle (65)
    on left: 44 45, on right: 5
bloc_instructions (66)
    on left: 46, on right: 44 45


state 0

    0 $accept: . programme $end

    MainPrgm  shift, and go to state 1

    programme  go to state 2


state 1

    1 programme: MainPrgm . IDF pvg Var declarations BeginPg acc_ouv instructions acc_fer EndPg pvg

    IDF  shift, and go to state 3


state 2

    0 $accept: programme . $end

    $end  shift, and go to state 4


state 3

    1 programme: MainPrgm IDF . pvg Var declarations BeginPg acc_ouv instructions acc_fer EndPg pvg

    pvg  shift, and go to state 5


state 4

    0 $accept: programme $end .

    $default  accept


state 5

    1 programme: MainPrgm IDF pvg . Var declarations BeginPg acc_ouv instructions acc_fer EndPg pvg

    Var  shift, and go to state 6


state 6

    1 programme: MainPrgm IDF pvg Var . declarations BeginPg acc_ouv instructions acc_fer EndPg pvg

    let      shift, and go to state 7
    at_sign  shift, and go to state 8

    $default  reduce using rule 35 (declarations)

    declaration        go to state 9
    const_declaration  go to state 10
    declarations       go to state 11


state 7

   29 declaration: let . liste_idf separ_dec type pvg
   30            | let . liste_idf separ_dec declaration_tableau

    IDF  shift, and go to state 12

    liste_idf  go to state 13


state 8

   34 const_declaration: at_sign . define Const IDF separ_dec type affect_val constante pvg

    define  shift, and go to state 14


state 9

   36 declarations: declaration . declarations

    let      shift, and go to state 7
    at_sign  shift, and go to state 8

    $default  reduce using rule 35 (declarations)

    declaration        go to state 9
    const_declaration  go to state 10
    declarations       go to state 15


state 10

   37 declarations: const_declaration . declarations

    let      shift, and go to state 7
    at_sign  shift, and go to state 8

    $default  reduce using rule 35 (declarations)

    declaration        go to state 9
    const_declaration  go to state 10
    declarations       go to state 16


state 11

    1 programme: MainPrgm IDF pvg Var declarations . BeginPg acc_ouv instructions acc_fer EndPg pvg

    BeginPg  shift, and go to state 17


state 12

   32 liste_idf: IDF .

    $default  reduce using rule 32 (liste_idf)


state 13

   29 declaration: let liste_idf . separ_dec type pvg
   30            | let liste_idf . separ_dec declaration_tableau
   33 liste_idf: liste_idf . vg IDF

    vg         shift, and go to state 18
    separ_dec  shift, and go to state 19


state 14

   34 const_declaration: at_sign define . Const IDF separ_dec type affect_val constante pvg

    Const  shift, and go to state 20


state 15

   36 declarations: declaration declarations .

    $default  reduce using rule 36 (declarations)


state 16

   37 declarations: const_declaration declarations .

    $default  reduce using rule 37 (declarations)


state 17

    1 programme: MainPrgm IDF pvg Var declarations BeginPg . acc_ouv instructions acc_fer EndPg pvg

    acc_ouv  shift, and go to state 21


state 18

   33 liste_idf: liste_idf vg . IDF

    IDF  shift, and go to state 22


state 19

   29 declaration: let liste_idf separ_dec . type pvg
   30            | let liste_idf separ_dec . declaration_tableau

    Int          shift, and go to state 23
    reel         shift, and go to state 24
    crochet_ouv  shift, and go to state 25

    type                 go to state 26
    declaration_tableau  go to state 27


state 20

   34 const_declaration: at_sign define Const . IDF separ_dec type affect_val constante pvg

    IDF  shift, and go to state 28


state 21

    1 programme: MainPrgm IDF pvg Var declarations BeginPg acc_ouv . instructions acc_fer EndPg pvg

    input_var   shift, and go to state 29
    output_var  shift, and go to state 30
    IDF         shift, and go to state 31
    IF          shift, and go to state 32
    DO          shift, and go to state 33
    FOR         shift, and go to state 34

    instruction   go to state 35
    instructions  go to state 36
    inOut         go to state 37
    affectation   go to state 38
    condition     go to state 39
    boucle        go to state 40


state 22

   33 liste_idf: liste_idf vg IDF .

    $default  reduce using rule 33 (liste_idf)


state 23

   27 type: Int .

    $default  reduce using rule 27 (type)


state 24

   28 type: reel .

    $default  reduce using rule 28 (type)


state 25

   31 declaration_tableau: crochet_ouv . type pvg constante crochet_fer pvg

    Int   shift, and go to state 23
    reel  shift, and go to state 24

    type  go to state 41


state 26

   29 declaration: let liste_idf separ_dec type . pvg

    pvg  shift, and go to state 42


state 27

   30 declaration: let liste_idf separ_dec declaration_tableau .

    $default  reduce using rule 30 (declaration)


state 28

   34 const_declaration: at_sign define Const IDF . separ_dec type affect_val constante pvg

    separ_dec  shift, and go to state 43


state 29

   38 inOut: input_var . par_ouv IDF par_fer pvg

    par_ouv  shift, and go to state 44


state 30

   39 inOut: output_var . par_ouv chaine par_fer pvg

    par_ouv  shift, and go to state 45


state 31

   40 affectation: IDF . aff expression pvg
   41            | IDF . crochet_ouv expression crochet_fer aff expression pvg

    aff          shift, and go to state 46
    crochet_ouv  shift, and go to state 47


state 32

   42 condition: IF . par_ouv expression par_fer THEN acc_ouv instructions acc_fer
   43          | IF . par_ouv expression par_fer THEN acc_ouv instructions acc_fer ELSE acc_ouv instructions acc_fer

    par_ouv  shift, and go to state 48


state 33

   44 boucle: DO . bloc_instructions WHILE par_ouv expression par_fer pvg

    acc_ouv  shift, and go to state 49

    bloc_instructions  go to state 50


state 34

   45 boucle: FOR . IDF FROM constante TO constante STEP constante bloc_instructions

    IDF  shift, and go to state 51


state 35

    6 instructions: instruction .

    $default  reduce using rule 6 (instructions)


state 36

    1 programme: MainPrgm IDF pvg Var declarations BeginPg acc_ouv instructions . acc_fer EndPg pvg
    7 instructions: instructions . instruction

    input_var   shift, and go to state 29
    output_var  shift, and go to state 30
    IDF         shift, and go to state 31
    IF          shift, and go to state 32
    DO          shift, and go to state 33
    FOR         shift, and go to state 34
    acc_fer     shift, and go to state 52

    instruction  go to state 53
    inOut        go to state 37
    affectation  go to state 38
    condition    go to state 39
    boucle       go to state 40


state 37

    3 instruction: inOut .

    $default  reduce using rule 3 (instruction)


state 38

    2 instruction: affectation .

    $default  reduce using rule 2 (instruction)


state 39

    4 instruction: condition .

    $default  reduce using rule 4 (instruction)


state 40

    5 instruction: boucle .

    $default  reduce using rule 5 (instruction)


state 41

   31 declaration_tableau: crochet_ouv type . pvg constante crochet_fer pvg

    pvg  shift, and go to state 54


state 42

   29 declaration: let liste_idf separ_dec type pvg .

    $default  reduce using rule 29 (declaration)


state 43

   34 const_declaration: at_sign define Const IDF separ_dec . type affect_val constante pvg

    Int   shift, and go to state 23
    reel  shift, and go to state 24

    type  go to state 55


state 44

   38 inOut: input_var par_ouv . IDF par_fer pvg

    IDF  shift, and go to state 56


state 45

   39 inOut: output_var par_ouv . chaine par_fer pvg

    chaine  shift, and go to state 57


state 46

   40 affectation: IDF aff . expression pvg

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 64


state 47

   41 affectation: IDF crochet_ouv . expression crochet_fer aff expression pvg

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 65


state 48

   42 condition: IF par_ouv . expression par_fer THEN acc_ouv instructions acc_fer
   43          | IF par_ouv . expression par_fer THEN acc_ouv instructions acc_fer ELSE acc_ouv instructions acc_fer

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 66


state 49

   46 bloc_instructions: acc_ouv . instructions acc_fer

    input_var   shift, and go to state 29
    output_var  shift, and go to state 30
    IDF         shift, and go to state 31
    IF          shift, and go to state 32
    DO          shift, and go to state 33
    FOR         shift, and go to state 34

    instruction   go to state 35
    instructions  go to state 67
    inOut         go to state 37
    affectation   go to state 38
    condition     go to state 39
    boucle        go to state 40


state 50

   44 boucle: DO bloc_instructions . WHILE par_ouv expression par_fer pvg

    WHILE  shift, and go to state 68


state 51

   45 boucle: FOR IDF . FROM constante TO constante STEP constante bloc_instructions

    FROM  shift, and go to state 69


state 52

    1 programme: MainPrgm IDF pvg Var declarations BeginPg acc_ouv instructions acc_fer . EndPg pvg

    EndPg  shift, and go to state 70


state 53

    7 instructions: instructions instruction .

    $default  reduce using rule 7 (instructions)


state 54

   31 declaration_tableau: crochet_ouv type pvg . constante crochet_fer pvg

    constante  shift, and go to state 71


state 55

   34 const_declaration: at_sign define Const IDF separ_dec type . affect_val constante pvg

    affect_val  shift, and go to state 72


state 56

   38 inOut: input_var par_ouv IDF . par_fer pvg

    par_fer  shift, and go to state 73


state 57

   39 inOut: output_var par_ouv chaine . par_fer pvg

    par_fer  shift, and go to state 74


state 58

    8 expression: IDF .
   12           | IDF . crochet_ouv expression crochet_fer

    crochet_ouv  shift, and go to state 75

    $default  reduce using rule 8 (expression)


state 59

   11 expression: chaine .

    $default  reduce using rule 11 (expression)


state 60

    9 expression: constante .

    $default  reduce using rule 9 (expression)


state 61

   10 expression: reel .

    $default  reduce using rule 10 (expression)


state 62

   15 expression: NOT . par_ouv expression par_fer

    par_ouv  shift, and go to state 76


state 63

   13 expression: par_ouv . expression AND expression par_fer
   14           | par_ouv . expression OR expression par_fer
   20           | par_ouv . expression par_fer

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 77


state 64

   16 expression: expression . add expression
   17           | expression . sous expression
   18           | expression . mult expression
   19           | expression . division expression
   21           | expression . inf expression
   22           | expression . sup expression
   23           | expression . inf_egal expression
   24           | expression . sup_egal expression
   25           | expression . egal expression
   26           | expression . not_egal expression
   40 affectation: IDF aff expression . pvg

    pvg       shift, and go to state 78
    add       shift, and go to state 79
    sous      shift, and go to state 80
    mult      shift, and go to state 81
    division  shift, and go to state 82
    inf_egal  shift, and go to state 83
    sup_egal  shift, and go to state 84
    inf       shift, and go to state 85
    sup       shift, and go to state 86
    egal      shift, and go to state 87
    not_egal  shift, and go to state 88


state 65

   16 expression: expression . add expression
   17           | expression . sous expression
   18           | expression . mult expression
   19           | expression . division expression
   21           | expression . inf expression
   22           | expression . sup expression
   23           | expression . inf_egal expression
   24           | expression . sup_egal expression
   25           | expression . egal expression
   26           | expression . not_egal expression
   41 affectation: IDF crochet_ouv expression . crochet_fer aff expression pvg

    add          shift, and go to state 79
    sous         shift, and go to state 80
    mult         shift, and go to state 81
    division     shift, and go to state 82
    inf_egal     shift, and go to state 83
    sup_egal     shift, and go to state 84
    inf          shift, and go to state 85
    sup          shift, and go to state 86
    egal         shift, and go to state 87
    not_egal     shift, and go to state 88
    crochet_fer  shift, and go to state 89


state 66

   16 expression: expression . add expression
   17           | expression . sous expression
   18           | expression . mult expression
   19           | expression . division expression
   21           | expression . inf expression
   22           | expression . sup expression
   23           | expression . inf_egal expression
   24           | expression . sup_egal expression
   25           | expression . egal expression
   26           | expression . not_egal expression
   42 condition: IF par_ouv expression . par_fer THEN acc_ouv instructions acc_fer
   43          | IF par_ouv expression . par_fer THEN acc_ouv instructions acc_fer ELSE acc_ouv instructions acc_fer

    add       shift, and go to state 79
    sous      shift, and go to state 80
    mult      shift, and go to state 81
    division  shift, and go to state 82
    inf_egal  shift, and go to state 83
    sup_egal  shift, and go to state 84
    inf       shift, and go to state 85
    sup       shift, and go to state 86
    egal      shift, and go to state 87
    not_egal  shift, and go to state 88
    par_fer   shift, and go to state 90


state 67

    7 instructions: instructions . instruction
   46 bloc_instructions: acc_ouv instructions . acc_fer

    input_var   shift, and go to state 29
    output_var  shift, and go to state 30
    IDF         shift, and go to state 31
    IF          shift, and go to state 32
    DO          shift, and go to state 33
    FOR         shift, and go to state 34
    acc_fer     shift, and go to state 91

    instruction  go to state 53
    inOut        go to state 37
    affectation  go to state 38
    condition    go to state 39
    boucle       go to state 40


state 68

   44 boucle: DO bloc_instructions WHILE . par_ouv expression par_fer pvg

    par_ouv  shift, and go to state 92


state 69

   45 boucle: FOR IDF FROM . constante TO constante STEP constante bloc_instructions

    constante  shift, and go to state 93


state 70

    1 programme: MainPrgm IDF pvg Var declarations BeginPg acc_ouv instructions acc_fer EndPg . pvg

    pvg  shift, and go to state 94


state 71

   31 declaration_tableau: crochet_ouv type pvg constante . crochet_fer pvg

    crochet_fer  shift, and go to state 95


state 72

   34 const_declaration: at_sign define Const IDF separ_dec type affect_val . constante pvg

    constante  shift, and go to state 96


state 73

   38 inOut: input_var par_ouv IDF par_fer . pvg

    pvg  shift, and go to state 97


state 74

   39 inOut: output_var par_ouv chaine par_fer . pvg

    pvg  shift, and go to state 98


state 75

   12 expression: IDF crochet_ouv . expression crochet_fer

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 99


state 76

   15 expression: NOT par_ouv . expression par_fer

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 100


state 77

   13 expression: par_ouv expression . AND expression par_fer
   14           | par_ouv expression . OR expression par_fer
   16           | expression . add expression
   17           | expression . sous expression
   18           | expression . mult expression
   19           | expression . division expression
   20           | par_ouv expression . par_fer
   21           | expression . inf expression
   22           | expression . sup expression
   23           | expression . inf_egal expression
   24           | expression . sup_egal expression
   25           | expression . egal expression
   26           | expression . not_egal expression

    OR        shift, and go to state 101
    AND       shift, and go to state 102
    add       shift, and go to state 79
    sous      shift, and go to state 80
    mult      shift, and go to state 81
    division  shift, and go to state 82
    inf_egal  shift, and go to state 83
    sup_egal  shift, and go to state 84
    inf       shift, and go to state 85
    sup       shift, and go to state 86
    egal      shift, and go to state 87
    not_egal  shift, and go to state 88
    par_fer   shift, and go to state 103


state 78

   40 affectation: IDF aff expression pvg .

    $default  reduce using rule 40 (affectation)


state 79

   16 expression: expression add . expression

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 104


state 80

   17 expression: expression sous . expression

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 105


state 81

   18 expression: expression mult . expression

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 106


state 82

   19 expression: expression division . expression

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 107


state 83

   23 expression: expression inf_egal . expression

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 108


state 84

   24 expression: expression sup_egal . expression

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 109


state 85

   21 expression: expression inf . expression

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 110


state 86

   22 expression: expression sup . expression

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 111


state 87

   25 expression: expression egal . expression

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 112


state 88

   26 expression: expression not_egal . expression

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 113


state 89

   41 affectation: IDF crochet_ouv expression crochet_fer . aff expression pvg

    aff  shift, and go to state 114


state 90

   42 condition: IF par_ouv expression par_fer . THEN acc_ouv instructions acc_fer
   43          | IF par_ouv expression par_fer . THEN acc_ouv instructions acc_fer ELSE acc_ouv instructions acc_fer

    THEN  shift, and go to state 115


state 91

   46 bloc_instructions: acc_ouv instructions acc_fer .

    $default  reduce using rule 46 (bloc_instructions)


state 92

   44 boucle: DO bloc_instructions WHILE par_ouv . expression par_fer pvg

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 116


state 93

   45 boucle: FOR IDF FROM constante . TO constante STEP constante bloc_instructions

    TO  shift, and go to state 117


state 94

    1 programme: MainPrgm IDF pvg Var declarations BeginPg acc_ouv instructions acc_fer EndPg pvg .

    $default  reduce using rule 1 (programme)


state 95

   31 declaration_tableau: crochet_ouv type pvg constante crochet_fer . pvg

    pvg  shift, and go to state 118


state 96

   34 const_declaration: at_sign define Const IDF separ_dec type affect_val constante . pvg

    pvg  shift, and go to state 119


state 97

   38 inOut: input_var par_ouv IDF par_fer pvg .

    $default  reduce using rule 38 (inOut)


state 98

   39 inOut: output_var par_ouv chaine par_fer pvg .

    $default  reduce using rule 39 (inOut)


state 99

   12 expression: IDF crochet_ouv expression . crochet_fer
   16           | expression . add expression
   17           | expression . sous expression
   18           | expression . mult expression
   19           | expression . division expression
   21           | expression . inf expression
   22           | expression . sup expression
   23           | expression . inf_egal expression
   24           | expression . sup_egal expression
   25           | expression . egal expression
   26           | expression . not_egal expression

    add          shift, and go to state 79
    sous         shift, and go to state 80
    mult         shift, and go to state 81
    division     shift, and go to state 82
    inf_egal     shift, and go to state 83
    sup_egal     shift, and go to state 84
    inf          shift, and go to state 85
    sup          shift, and go to state 86
    egal         shift, and go to state 87
    not_egal     shift, and go to state 88
    crochet_fer  shift, and go to state 120


state 100

   15 expression: NOT par_ouv expression . par_fer
   16           | expression . add expression
   17           | expression . sous expression
   18           | expression . mult expression
   19           | expression . division expression
   21           | expression . inf expression
   22           | expression . sup expression
   23           | expression . inf_egal expression
   24           | expression . sup_egal expression
   25           | expression . egal expression
   26           | expression . not_egal expression

    add       shift, and go to state 79
    sous      shift, and go to state 80
    mult      shift, and go to state 81
    division  shift, and go to state 82
    inf_egal  shift, and go to state 83
    sup_egal  shift, and go to state 84
    inf       shift, and go to state 85
    sup       shift, and go to state 86
    egal      shift, and go to state 87
    not_egal  shift, and go to state 88
    par_fer   shift, and go to state 121


state 101

   14 expression: par_ouv expression OR . expression par_fer

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 122


state 102

   13 expression: par_ouv expression AND . expression par_fer

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 123


state 103

   20 expression: par_ouv expression par_fer .

    $default  reduce using rule 20 (expression)


state 104

   16 expression: expression . add expression
   16           | expression add expression .
   17           | expression . sous expression
   18           | expression . mult expression
   19           | expression . division expression
   21           | expression . inf expression
   22           | expression . sup expression
   23           | expression . inf_egal expression
   24           | expression . sup_egal expression
   25           | expression . egal expression
   26           | expression . not_egal expression

    mult      shift, and go to state 81
    division  shift, and go to state 82

    $default  reduce using rule 16 (expression)


state 105

   16 expression: expression . add expression
   17           | expression . sous expression
   17           | expression sous expression .
   18           | expression . mult expression
   19           | expression . division expression
   21           | expression . inf expression
   22           | expression . sup expression
   23           | expression . inf_egal expression
   24           | expression . sup_egal expression
   25           | expression . egal expression
   26           | expression . not_egal expression

    mult      shift, and go to state 81
    division  shift, and go to state 82

    $default  reduce using rule 17 (expression)


state 106

   16 expression: expression . add expression
   17           | expression . sous expression
   18           | expression . mult expression
   18           | expression mult expression .
   19           | expression . division expression
   21           | expression . inf expression
   22           | expression . sup expression
   23           | expression . inf_egal expression
   24           | expression . sup_egal expression
   25           | expression . egal expression
   26           | expression . not_egal expression

    $default  reduce using rule 18 (expression)


state 107

   16 expression: expression . add expression
   17           | expression . sous expression
   18           | expression . mult expression
   19           | expression . division expression
   19           | expression division expression .
   21           | expression . inf expression
   22           | expression . sup expression
   23           | expression . inf_egal expression
   24           | expression . sup_egal expression
   25           | expression . egal expression
   26           | expression . not_egal expression

    $default  reduce using rule 19 (expression)


state 108

   16 expression: expression . add expression
   17           | expression . sous expression
   18           | expression . mult expression
   19           | expression . division expression
   21           | expression . inf expression
   22           | expression . sup expression
   23           | expression . inf_egal expression
   23           | expression inf_egal expression .
   24           | expression . sup_egal expression
   25           | expression . egal expression
   26           | expression . not_egal expression

    add       shift, and go to state 79
    sous      shift, and go to state 80
    mult      shift, and go to state 81
    division  shift, and go to state 82

    $default  reduce using rule 23 (expression)


state 109

   16 expression: expression . add expression
   17           | expression . sous expression
   18           | expression . mult expression
   19           | expression . division expression
   21           | expression . inf expression
   22           | expression . sup expression
   23           | expression . inf_egal expression
   24           | expression . sup_egal expression
   24           | expression sup_egal expression .
   25           | expression . egal expression
   26           | expression . not_egal expression

    add       shift, and go to state 79
    sous      shift, and go to state 80
    mult      shift, and go to state 81
    division  shift, and go to state 82

    $default  reduce using rule 24 (expression)


state 110

   16 expression: expression . add expression
   17           | expression . sous expression
   18           | expression . mult expression
   19           | expression . division expression
   21           | expression . inf expression
   21           | expression inf expression .
   22           | expression . sup expression
   23           | expression . inf_egal expression
   24           | expression . sup_egal expression
   25           | expression . egal expression
   26           | expression . not_egal expression

    add       shift, and go to state 79
    sous      shift, and go to state 80
    mult      shift, and go to state 81
    division  shift, and go to state 82

    $default  reduce using rule 21 (expression)


state 111

   16 expression: expression . add expression
   17           | expression . sous expression
   18           | expression . mult expression
   19           | expression . division expression
   21           | expression . inf expression
   22           | expression . sup expression
   22           | expression sup expression .
   23           | expression . inf_egal expression
   24           | expression . sup_egal expression
   25           | expression . egal expression
   26           | expression . not_egal expression

    add       shift, and go to state 79
    sous      shift, and go to state 80
    mult      shift, and go to state 81
    division  shift, and go to state 82

    $default  reduce using rule 22 (expression)


state 112

   16 expression: expression . add expression
   17           | expression . sous expression
   18           | expression . mult expression
   19           | expression . division expression
   21           | expression . inf expression
   22           | expression . sup expression
   23           | expression . inf_egal expression
   24           | expression . sup_egal expression
   25           | expression . egal expression
   25           | expression egal expression .
   26           | expression . not_egal expression

    add       shift, and go to state 79
    sous      shift, and go to state 80
    mult      shift, and go to state 81
    division  shift, and go to state 82

    $default  reduce using rule 25 (expression)


state 113

   16 expression: expression . add expression
   17           | expression . sous expression
   18           | expression . mult expression
   19           | expression . division expression
   21           | expression . inf expression
   22           | expression . sup expression
   23           | expression . inf_egal expression
   24           | expression . sup_egal expression
   25           | expression . egal expression
   26           | expression . not_egal expression
   26           | expression not_egal expression .

    add       shift, and go to state 79
    sous      shift, and go to state 80
    mult      shift, and go to state 81
    division  shift, and go to state 82

    $default  reduce using rule 26 (expression)


state 114

   41 affectation: IDF crochet_ouv expression crochet_fer aff . expression pvg

    IDF        shift, and go to state 58
    chaine     shift, and go to state 59
    constante  shift, and go to state 60
    reel       shift, and go to state 61
    NOT        shift, and go to state 62
    par_ouv    shift, and go to state 63

    expression  go to state 124


state 115

   42 condition: IF par_ouv expression par_fer THEN . acc_ouv instructions acc_fer
   43          | IF par_ouv expression par_fer THEN . acc_ouv instructions acc_fer ELSE acc_ouv instructions acc_fer

    acc_ouv  shift, and go to state 125


state 116

   16 expression: expression . add expression
   17           | expression . sous expression
   18           | expression . mult expression
   19           | expression . division expression
   21           | expression . inf expression
   22           | expression . sup expression
   23           | expression . inf_egal expression
   24           | expression . sup_egal expression
   25           | expression . egal expression
   26           | expression . not_egal expression
   44 boucle: DO bloc_instructions WHILE par_ouv expression . par_fer pvg

    add       shift, and go to state 79
    sous      shift, and go to state 80
    mult      shift, and go to state 81
    division  shift, and go to state 82
    inf_egal  shift, and go to state 83
    sup_egal  shift, and go to state 84
    inf       shift, and go to state 85
    sup       shift, and go to state 86
    egal      shift, and go to state 87
    not_egal  shift, and go to state 88
    par_fer   shift, and go to state 126


state 117

   45 boucle: FOR IDF FROM constante TO . constante STEP constante bloc_instructions

    constante  shift, and go to state 127


state 118

   31 declaration_tableau: crochet_ouv type pvg constante crochet_fer pvg .

    $default  reduce using rule 31 (declaration_tableau)


state 119

   34 const_declaration: at_sign define Const IDF separ_dec type affect_val constante pvg .

    $default  reduce using rule 34 (const_declaration)


state 120

   12 expression: IDF crochet_ouv expression crochet_fer .

    $default  reduce using rule 12 (expression)


state 121

   15 expression: NOT par_ouv expression par_fer .

    $default  reduce using rule 15 (expression)


state 122

   14 expression: par_ouv expression OR expression . par_fer
   16           | expression . add expression
   17           | expression . sous expression
   18           | expression . mult expression
   19           | expression . division expression
   21           | expression . inf expression
   22           | expression . sup expression
   23           | expression . inf_egal expression
   24           | expression . sup_egal expression
   25           | expression . egal expression
   26           | expression . not_egal expression

    add       shift, and go to state 79
    sous      shift, and go to state 80
    mult      shift, and go to state 81
    division  shift, and go to state 82
    inf_egal  shift, and go to state 83
    sup_egal  shift, and go to state 84
    inf       shift, and go to state 85
    sup       shift, and go to state 86
    egal      shift, and go to state 87
    not_egal  shift, and go to state 88
    par_fer   shift, and go to state 128


state 123

   13 expression: par_ouv expression AND expression . par_fer
   16           | expression . add expression
   17           | expression . sous expression
   18           | expression . mult expression
   19           | expression . division expression
   21           | expression . inf expression
   22           | expression . sup expression
   23           | expression . inf_egal expression
   24           | expression . sup_egal expression
   25           | expression . egal expression
   26           | expression . not_egal expression

    add       shift, and go to state 79
    sous      shift, and go to state 80
    mult      shift, and go to state 81
    division  shift, and go to state 82
    inf_egal  shift, and go to state 83
    sup_egal  shift, and go to state 84
    inf       shift, and go to state 85
    sup       shift, and go to state 86
    egal      shift, and go to state 87
    not_egal  shift, and go to state 88
    par_fer   shift, and go to state 129


state 124

   16 expression: expression . add expression
   17           | expression . sous expression
   18           | expression . mult expression
   19           | expression . division expression
   21           | expression . inf expression
   22           | expression . sup expression
   23           | expression . inf_egal expression
   24           | expression . sup_egal expression
   25           | expression . egal expression
   26           | expression . not_egal expression
   41 affectation: IDF crochet_ouv expression crochet_fer aff expression . pvg

    pvg       shift, and go to state 130
    add       shift, and go to state 79
    sous      shift, and go to state 80
    mult      shift, and go to state 81
    division  shift, and go to state 82
    inf_egal  shift, and go to state 83
    sup_egal  shift, and go to state 84
    inf       shift, and go to state 85
    sup       shift, and go to state 86
    egal      shift, and go to state 87
    not_egal  shift, and go to state 88


state 125

   42 condition: IF par_ouv expression par_fer THEN acc_ouv . instructions acc_fer
   43          | IF par_ouv expression par_fer THEN acc_ouv . instructions acc_fer ELSE acc_ouv instructions acc_fer

    input_var   shift, and go to state 29
    output_var  shift, and go to state 30
    IDF         shift, and go to state 31
    IF          shift, and go to state 32
    DO          shift, and go to state 33
    FOR         shift, and go to state 34

    instruction   go to state 35
    instructions  go to state 131
    inOut         go to state 37
    affectation   go to state 38
    condition     go to state 39
    boucle        go to state 40


state 126

   44 boucle: DO bloc_instructions WHILE par_ouv expression par_fer . pvg

    pvg  shift, and go to state 132


state 127

   45 boucle: FOR IDF FROM constante TO constante . STEP constante bloc_instructions

    STEP  shift, and go to state 133


state 128

   14 expression: par_ouv expression OR expression par_fer .

    $default  reduce using rule 14 (expression)


state 129

   13 expression: par_ouv expression AND expression par_fer .

    $default  reduce using rule 13 (expression)


state 130

   41 affectation: IDF crochet_ouv expression crochet_fer aff expression pvg .

    $default  reduce using rule 41 (affectation)


state 131

    7 instructions: instructions . instruction
   42 condition: IF par_ouv expression par_fer THEN acc_ouv instructions . acc_fer
   43          | IF par_ouv expression par_fer THEN acc_ouv instructions . acc_fer ELSE acc_ouv instructions acc_fer

    input_var   shift, and go to state 29
    output_var  shift, and go to state 30
    IDF         shift, and go to state 31
    IF          shift, and go to state 32
    DO          shift, and go to state 33
    FOR         shift, and go to state 34
    acc_fer     shift, and go to state 134

    instruction  go to state 53
    inOut        go to state 37
    affectation  go to state 38
    condition    go to state 39
    boucle       go to state 40


state 132

   44 boucle: DO bloc_instructions WHILE par_ouv expression par_fer pvg .

    $default  reduce using rule 44 (boucle)


state 133

   45 boucle: FOR IDF FROM constante TO constante STEP . constante bloc_instructions

    constante  shift, and go to state 135


state 134

   42 condition: IF par_ouv expression par_fer THEN acc_ouv instructions acc_fer .
   43          | IF par_ouv expression par_fer THEN acc_ouv instructions acc_fer . ELSE acc_ouv instructions acc_fer

    ELSE  shift, and go to state 136

    $default  reduce using rule 42 (condition)


state 135

   45 boucle: FOR IDF FROM constante TO constante STEP constante . bloc_instructions

    acc_ouv  shift, and go to state 49

    bloc_instructions  go to state 137


state 136

   43 condition: IF par_ouv expression par_fer THEN acc_ouv instructions acc_fer ELSE . acc_ouv instructions acc_fer

    acc_ouv  shift, and go to state 138


state 137

   45 boucle: FOR IDF FROM constante TO constante STEP constante bloc_instructions .

    $default  reduce using rule 45 (boucle)


state 138

   43 condition: IF par_ouv expression par_fer THEN acc_ouv instructions acc_fer ELSE acc_ouv . instructions acc_fer

    input_var   shift, and go to state 29
    output_var  shift, and go to state 30
    IDF         shift, and go to state 31
    IF          shift, and go to state 32
    DO          shift, and go to state 33
    FOR         shift, and go to state 34

    instruction   go to state 35
    instructions  go to state 139
    inOut         go to state 37
    affectation   go to state 38
    condition     go to state 39
    boucle        go to state 40


state 139

    7 instructions: instructions . instruction
   43 condition: IF par_ouv expression par_fer THEN acc_ouv instructions acc_fer ELSE acc_ouv instructions . acc_fer

    input_var   shift, and go to state 29
    output_var  shift, and go to state 30
    IDF         shift, and go to state 31
    IF          shift, and go to state 32
    DO          shift, and go to state 33
    FOR         shift, and go to state 34
    acc_fer     shift, and go to state 140

    instruction  go to state 53
    inOut        go to state 37
    affectation  go to state 38
    condition    go to state 39
    boucle       go to state 40


state 140

   43 condition: IF par_ouv expression par_fer THEN acc_ouv instructions acc_fer ELSE acc_ouv instructions acc_fer .

    $default  reduce using rule 43 (condition)
